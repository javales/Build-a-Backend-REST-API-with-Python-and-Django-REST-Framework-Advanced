# 21. Enable Travis-CI for project
- every time we push to Github, we can make TCI run our Python unit tests and our Python linting
- email notification for a broken build
- sign into Travis-CI with Github account
- find [udemy-recipe-app-api] in list and enable the project for Travis-CI

[[Resources]]
Travis-CI
https://travis-ci.org/


# 22. Create Travic-CI configuration file
- tells TCI what to do every time we push a change to our project
- create a TCI configuration file by creating a file at the root of the project: [.travis.yml]
- first line is the language TCI should expect our project to be in
- the version of Python we need to use
-- but version doesn't matter for TCI server, because our Dockerfile has the correct version we'll be using -- i.e. 3.7
- then tell what services we need to use, in our case: the [docker service]
-- the subservices will be in the docker-compose.yml and Dockerfile
- then specify a [before script] that TCI will run before it executes any of the subsequent automation commands in [script:]
-- [flake8] is the linting tool
[Summary]
- with each push to Github, TCI will spin up a python server running 3.6, make the docker service available, use pip to install docker-compose, run a script to uses docker-compose to start app and linter, where a failure will send us a notification
- [save]
language: python
python:
    - "3.6"

services:
    - docker

before_script: pip install docker-compose

script: 
    - docker-compose run app sh -c "python manage.py test && flake8"


## Add Flake8 Linting Tool
- add to requirements.txt
- LESSON's latest version of Flake8 in pypi.org is 3.6.0
Django>=2.1.3,<2.2.0
djangorestframework>=3.9.0,<3.10.0
flake8>=3.6.0,<3.7.0


## Add a Flake8 config
- add to Python project
- start with [flake8]
- add exclusions of the automated scripts and tools that are created by Django, because they have a 100-character limit
- [Python guidelines], however, recommend a [79-character limit]
- exclude the Django portions so it doesn't fail on the linting
[flake8]
exclude =
    migrations,
    __pycache__,
    manage.py,
    settings.py

## Commit and Push Changes
git add.
git commit -a
git push origin

[Successful]
0.14s0.01s0.00s0.01s
system_info
Build system information
0.01s0.38s0.20s0.05s0.00s0.04s0.00s0.01s0.01s0.01s0.01s0.01s0.00s0.00s0.02s0.00s0.01s0.31s0.00s0.00s0.00s0.01s0.00s0.12s0.01s0.78s0.00s0.00s6.03s0.00s2.49s0.00s2.25s
docker_mtu
resolvconf
services
3.01s$ sudo systemctl start docker
git.checkout
0.60s$ git clone --depth=50 --branch=master https://github.com/javales/udemy-recipe-app-api.git javales/udemy-recipe-app-api
travis
0.01s0.00s$ source ~/virtualenv/python3.6/bin/activate
$ python --version
Python 3.6.7
$ pip --version
pip 19.0.3 from /home/travis/virtualenv/python3.6.7/lib/python3.6/site-packages/pip (python 3.6)
install
3.95s$ pip install -r requirements.txt
before_script
12.30s$ pip install docker-compose
17.45s$ docker-compose run app sh -c "python manage.py test && flake8"
Creating network "udemy-recipe-app-api_default" with the default driver
Building app
Step 1/10 : FROM python:3.7-alpine
3.7-alpine: Pulling from library/python
Digest: sha256:4a704ebee45695fa91125301e43eee08a85fc984d05cc75650cc66fad7826c56
Status: Downloaded newer image for python:3.7-alpine
 ---> 7fbc871584eb
Step 2/10 : MAINTAINER javales
 ---> Running in 40b6b03659bd
Removing intermediate container 40b6b03659bd
 ---> e479750c5f32
Step 3/10 : ENV PYTHONUNBUFFERED 1
 ---> Running in b33791db87b0
Removing intermediate container b33791db87b0
 ---> 79f0485e3f7f
Step 4/10 : COPY ./requirements.txt /requirements.txt
 ---> 4367768200ba
Step 5/10 : RUN pip install -r /requirements.txt
 ---> Running in 9b5898095930
Collecting Django<2.2.0,>=2.1.3
  Downloading Django-2.1.15-py3-none-any.whl (7.3 MB)
Collecting djangorestframework<3.10.0,>=3.9.0
  Downloading djangorestframework-3.9.4-py2.py3-none-any.whl (911 kB)
Collecting flake8<3.7.0,>=3.6.0
  Downloading flake8-3.6.0-py2.py3-none-any.whl (68 kB)
Collecting pytz
  Downloading pytz-2019.3-py2.py3-none-any.whl (509 kB)
Collecting pycodestyle<2.5.0,>=2.4.0
  Downloading pycodestyle-2.4.0-py2.py3-none-any.whl (62 kB)
Collecting mccabe<0.7.0,>=0.6.0
  Downloading mccabe-0.6.1-py2.py3-none-any.whl (8.6 kB)
Collecting pyflakes<2.1.0,>=2.0.0
  Downloading pyflakes-2.0.0-py2.py3-none-any.whl (53 kB)
Requirement already satisfied: setuptools>=30 in /usr/local/lib/python3.7/site-packages (from flake8<3.7.0,>=3.6.0->-r /requirements.txt (line 3)) (46.1.1)
Installing collected packages: pytz, Django, djangorestframework, pycodestyle, mccabe, pyflakes, flake8
Successfully installed Django-2.1.15 djangorestframework-3.9.4 flake8-3.6.0 mccabe-0.6.1 pycodestyle-2.4.0 pyflakes-2.0.0 pytz-2019.3
Removing intermediate container 9b5898095930
 ---> 1e58d23d912f
Step 6/10 : RUN mkdir /app
 ---> Running in 984c15aaf002
Removing intermediate container 984c15aaf002
 ---> f12812a82784
Step 7/10 : WORKDIR /app
 ---> Running in 15a505e850ee
Removing intermediate container 15a505e850ee
 ---> 9ef9e67743b2
Step 8/10 : COPY ./app /app
 ---> 8b49e4fd20b4
Step 9/10 : RUN adduser -D user
 ---> Running in 47ea585e529c
Removing intermediate container 47ea585e529c
 ---> 963ff6c2ca88
Step 10/10 : USER user
 ---> Running in e5726771cf79
Removing intermediate container e5726771cf79
 ---> 58cd3c8680d7
Successfully built 58cd3c8680d7
Successfully tagged udemy-recipe-app-api_app:latest
WARNING: Image for service app was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.
Creating test database for alias 'default'...
System check identified no issues (0 silenced).
----------------------------------------------------------------------
Ran 0 tests in 0.000s
OK
Destroying test database for alias 'default'...
The command "docker-compose run app sh -c "python manage.py test && flake8"" exited with 0.
Done. Your build exited with 0.

[[Resources]]
Travis-CI Tutorial
https://docs.travis-ci.com/user/tutorial/

Python Flake8
http://flake8.pycqa.org/en/latest/

CODE: .travis.yml
https://gist.github.com/LondonAppDev/d917c2b239633dcf371bb9a665d1ba45

CODE: requirements.txt
https://gist.github.com/LondonAppDev/2fc34c20a576184ba8dafe919d5897da

CODE: .flake8
https://gist.github.com/LondonAppDev/3604d032c57475fb100de0a2e5004b4a


# Quiz 1: Travis-CI
1 question
