# 35. Add postgres to docker compose
- set up Postgres instead of default SQL Lite
- start by making changes to Dockercompose file to create a database service and pass in database settings

## open docker-compose.yml to create db service
- pass in configuration settings using environment variables
- in real world, use an encrypted environment variable that overrides the plain text password when you push the application
- here, we're just running the database locally, so not a security issue

## modify app service to set environment variables and dependency on db service
- database will start before app service
- database will be available via network using hostname [db]

[[CODE]]
version: "3"

services:
    app: 
        build: 
            context: .
        ports:
            - "8000:8000"
        volumes:
            - ./app:/app
        command: >
            sh -c "python manage.py runserver 0.0.0.0:8000"
        environment:
            - DB_HOST=db
            - DB_NAME=app
            - DB_USER=postgres
            - DB_PASS=supersupersecret
        depends_on:
            - db

    db:
        image: postgres:10-alpine
        environment:
            - POSTGRES_DB=app
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersupersecret


# 36. Add postgres support to Dockerfile

# 37. Configure database in Django
